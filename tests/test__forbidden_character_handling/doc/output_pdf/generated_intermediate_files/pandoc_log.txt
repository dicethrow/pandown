
$ pandoc -f markdown-raw_tex -F /home/ubuntu/.local/bin/panflute /home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/output_pdf/generated_intermediate_files/main.md --template /home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/python_lib/pandown/doc_resources/raw_content/pdf_templates/test2.latex -s -o /home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/output_pdf/generated_intermediate_files/result.latex --listings
db: elem:<light-blue> b'Doc' </light-blue>, parent:<light-green>b'None'</light-green>, children:<light-yellow>[b"MetaMap('documentclass' 'generated_intermediate_files_dir' 'generated_output_files_dir' 'output_dir' 'panflute-filters' 'panflute-path' 'starting_dir' 'subtitle' 'title')", b'ListContainer(RawBlock(\\part{This is part one}; format=\'latex\') Header(Str(heading) Space Str(one) Space Str(in) Space Str(/main.md); level=1, identifier=\'heading-one-in-main.md\') Para(Str(Edit) Space Str(made) Space Str(on) Space Str(new) Space Str(os.)) Para(Strong(Str(paragraph)) Space Str(in) Space Str(/main.md)) Para(Str(note) Space Str(the) Space Str(things) Space Str(in) Space Strong(Str(parts)) Space Str(must) Space Str(be) Space Emph(Str(directories)) Space Str(which) Space Str(contain) Space Str(a) Space Str(main.md.) Space Str(That) Space Str(main.md) Space Str(file) Space Str(may) Space Str(also) Space Str(have) Space Str(a) Space Strong(Str(parts)) Space Str(section) Space Str(for) Space Str(including) Space Str(further) Space Str(files,) Space Str(etc.)) Para(Image(Str(alt) Space Str(text); url=\'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/spaceship.png\', title=\'fig:\')) Para(Str(This) Space Str(is) Space Str(\xc2\xa0some) Space Str(text) Space Str(\\with) Space Str(a) Space Str(number\xc2\xa0of) Space Str(backslashes\xc2\xa0in) Space Str(it) Space Str(\\\\\\\\) Space Str(.)) RawBlock(\\part{This is part two}; format=\'latex\') Header(Str(To) Space Str(do); level=1, identifier=\'to-do\') BulletList(ListItem(Plain(Str(Closely) Space Str(match) Space Str(the) Space Str(appearance) Space Str(of) Space Str(my) Space Str(latex) Space Str(documents) Space Str(from) Space Str(a) Space Str(year) Space Str(ago)) BulletList(ListItem(Plain(Str(same) Space Str(border) Space Str(spacing))) ListItem(Plain(Str(same) Space Str(structure,) Space Str(e.g.\xc2\xa0have) Space Str(an) Space Str(abstract/terminology/progress) Space Str(sections,) Space Str(bibliography/appendix) Space Str(etc))) ListItem(Plain(Str(make) Space Str(top) Space Str(level) Space Str(headings) Space Str(as) Space Quoted(Str(parts); quote_type=\'SingleQuote\') Str(,) Space Str(e.g.\xc2\xa0part) Space Str(1,) Space Str(part) Space Str(2,)))))) Para(Str(well) Space Str(let\xe2\x80\x99s) Space Str(consider) Space Str(this) Space Str(algorithm)) CodeBlock(def mainko(bozo):\n    return "hungry"; classes=[\'python\']) Para(Str(as) Space Str(well) Space Str(as) Space Str(this)) CodeBlock(int mainko(int bozo){\n    return ERROR_UNDEF;\n}; classes=[\'c\']) Header(Str(heading) Space Str(level) Space Str(2) Space Str(in) Space Str(the) Space Str(.md); level=1, identifier=\'heading-level-2-in-the-.md\') Para(Str(aaa)) Header(Str(heading) Space Str(level) Space Str(3) Space Str(in) Space Str(the) Space Str(.md); level=2, identifier=\'heading-level-3-in-the-.md\') Para(Str(bbb)) Para(Str(todo) Space Str(-) Space Str(make) Space Str(the) Space Str(key:value) Space Str(thing) Space Str(in) Space Str(parts) Space Str(be) Space Str(section) Space Str(parts) Space Str(to) Space Str(filenames,) Space Str(e.g.\xc2\xa0for) Space Str(abstract,) Space Str(progress,) Space Str(etc?)) Div(Header(Str(Heading) Space Str(level) Space Str(1) Space Str((should) Space Str(become) Space Str(2)) Space Str(in) Space Str(content/a_outerfolder/main.md); level=1, identifier=\'heading-level-1-should-become-2-in-contenta_outerfoldermain.md\') Para(Str(Content) Space Str(below) Space Str(that) Space Str(heading) Space Str(in) Space Str(the) Space Str(markdown) Space Str(file)) Para(Str(xxx) Space Str(change)) Para(Str(let\xe2\x80\x99s) Space Str(see) Space Str(if) Space Str(this) Space Emph(Str(mermaid)) Space Str(filter) Space Str(works.) Space Str(Should) Space Str(look) Space Str(like) Space Str(the) Space Str(example) Space Str(from) Space Str(https://github.com/raghur/mermaid-filter)) CodeBlock(sequenceDiagram\n    Alice->>John: Hello John, how are you?\n    John-->>Alice: Great!\n    ; classes=[\'mermaid\']) Para(Str(Now) Space Str(let\xe2\x80\x99s) Space Str(try) Space Str(another,) Space Str(this) Space Str(one) Space Str(from) Space Str(here:) Space Str(https://stackoverflow.com/questions/68561397/mermaid-syntax-error-on-trying-render-a-diagram-on-github-md-file)) CodeBlock(sequenceDiagram\n    autonumber\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!; classes=[\'mermaid\']); attributes={\'source\': \'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/a_outerfolder/main.md\'}) Div(Header(Str(Heading) Space Str(level) Space Str(1) Space Str((should) Space Str(become) Space Str(2)) Space Str(in) Space Str(content/b_outerfolder/main.md); level=1, identifier=\'heading-level-1-should-become-2-in-contentb_outerfoldermain.md\') Para(Str(Content) Space Str(below) Space Str(that) Space Str(heading) Space Str(in) Space Str(the) Space Str(markdown) Space Str(file.) Space Str(A) Space Str(nested) Space Str(list) Space Str(test) Space Str(follows.)) OrderedList(ListItem(Plain(Str(This) Space Str(is) Space Str(one) Space Str(element))) ListItem(Plain(Str(Another)) OrderedList(ListItem(Plain(Str(And) Space Str(a) Space Str(nested) Space Str(element)) BulletList(ListItem(Plain(Str(with) Space Str(a) Space Str(nested) Space Str(dot))) ListItem(Plain(Str(another))))) ListItem(Plain(Str(More) Space Str(element))); start=1, style=\'Decimal\', delimiter=\'Period\')) ListItem(Plain(Str(Outer) Space Str(end) Space Str(of) Space Str(list))); start=1, style=\'Decimal\', delimiter=\'Period\') Para(Str(Note) Space Str(that) Space Str(there) Space Str(are) Space Str(two) Space Str(more) Space Str(subfolders) Space Str(here,) Space Str(however) Space Str(they) Space Str(are) Space Str(not) Space Str(referenced) Space Str(in) Space Str(this) Space Str(markdown) Space Str(file,) Space Str(and) Space Str(hence) Space Str(are) Space Str(not) Space Str(integrated) Space Str(into) Space Str(the) Space Str(final) Space Str(document.)) Para(Str(This) Space Str(is) Space Str(\xc2\xa0some) Space Str(more) Space Str(text) Space RawInline(\\with ; format=\'tex\') Str(a) Space Str(number\xc2\xa0of) Space Str(backslashes\xc2\xa0in) Space Str(it) Space Str(\\\\\\\\) Space Str(.)); attributes={\'source\': \'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/b_outerfolder/main.md\'}) Div(Header(Str(Heading) Space Str(level) Space Str(1) Space Str((should) Space Str(become) Space Str(2)) Space Str(in) Space Str(content/c_outerfolder/main.md); level=1, identifier=\'heading-level-1-should-become-2-in-contentc_outerfoldermain.md\') Para(Str(ffbc)) Div(Header(Str(hello) Space Str(from) Space Str(behe); level=2, identifier=\'hello-from-behe\') Para(Str(hohoe)) Header(Str(jfdksllkjfdslkjfds); level=3, identifier=\'jfdksllkjfdslkjfds\') Para(Str(bo) Space Str(how) Space Str(bew) Space Str(stant)) Para(Str(now) Space Str(let\xe2\x80\x99s) Space Str(add) Space Str(an) Space Str(image)) Para(Image(Str(Here\xe2\x80\x99s) Space Str(me) Space Str(doing) Space Str(some) Space Str(PCB) Space Str(stuff); url=\'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/c_outerfolder/a_behe/images/sample_image.png\', title=\'fig:\')); attributes={\'source\': \'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/c_outerfolder/a_behe/main.md\'}) Div(Header(Str(hullow) Space Str(from) Space Str(b_boho); level=2, identifier=\'hullow-from-b_boho\') Para(Str(as) Space Str(a) Space Str(paragraph)) Para(Image(Str(alt) Space Str(text); url=\'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/c_outerfolder/b_boho/spaceship2.png\', title=\'fig:\')) Header(Str(as) Space Str(a) Space Str(second) Space Str(level) Space Str(heading); level=3, identifier=\'as-a-second-level-heading\') Para(Str(huahua)); attributes={\'source\': \'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/c_outerfolder/b_boho/main.md\'}) Para(Str(another) Space Str(end) Space Str(line\xe2\x80\xa6) Space Str(helps?) SoftBreak Image(Str(alt) Space Str(text); url=\'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/c_outerfolder/b_boho/spaceship2.png\')); attributes={\'source\': \'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/c_outerfolder/main.md\'}) Div(Header(Str(hellobd); level=1, identifier=\'hellobd\') Para(Str(ffbd)); attributes={\'source\': \'/home/ubuntu/from_host/x/Documents/git_repos/documentation/tools/pandown/tests/test__forbidden_character_handling/doc/content/d_outerfolder/main.md\'}) RawBlock(<!-- \n``` comment\nhello this is an ignorable comment\n``` -->; format=\'html\') RawBlock(\\part{another top level heading}; format=\'latex\') Para(Str(here\xe2\x80\x99s) Space Str(a) Space Str(copy-pasted) Space Str(thing) Space Str(of) Space Str(the) Space Str(parts) Space Str(-) Space Str(does) Space Str(it) Space Str(work?) SoftBreak RawInline(<!-- \n``` parts\nmy_key_1: my_value_1\nmy_key_2: my_value_2\n---\na_outerfolder\nb_outerfolder\nc_outerfolder\nd_outerfolder\n``` -->; format=\'html\')))']</light-yellow> 
